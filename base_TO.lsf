##########################################################
####### Base script for Topology Optimization ############
####### Copyright (C) - FiOWIN Lab @ Fudan University ####
##########################################################


switchtolayout;
selectall;
delete;


#########################
#### Initialization #####
#########################
num_in_wg=none;
num_out_wg=none;
out_wg_width=none;
in_wg_width=none;
opt_size_x=none;
opt_size_y=none;
lam_c=none;
mode_num=none;
wavelength_span=none;
in_mode_list=none;
out_mode_list=none;

dx = 20e-9;
size_x = opt_size_x+1e-6;
size_y = opt_size_y+1e-6;
fdtd_zspan = 2e-6;
wg_thickness = 220e-9;
cladding_thickness = 10e-6;


#########################
## Material Definition ##
#########################
n_wg=getindex('Si (Silicon) - Palik',c/lam_c);
n_bg=getindex('SiO2 (Glass) - Palik',c/lam_c);
self_define_materials=true;
if (self_define_materials){
    addmaterial("Dielectric");
    setmaterial("New material 1", "Refractive Index", n_bg);
    setmaterial("New material 1", "color", [0,255,255,255]);
    setmaterial("New material 1", "Mesh Order", 2);
    setmaterial("New material 1", "name", "n_bg");
    addmaterial("Dielectric");
    setmaterial("New material 1", "Refractive Index", n_wg);
    setmaterial("New material 1", "color", [170,0,0,255]);
    setmaterial("New material 1", "Mesh Order", 2);
    setmaterial("New material 1", "name", "n_wg");
}


#########################
###### add cladding #####
#########################
addrect;
set('name','cladding');
set('x',0);
set('x span',opt_size_x + 7e-6);
set('y',0);
set('y span',opt_size_y + 7e-6);
set('z',0);
set('z span',cladding_thickness);
set('material',"n_bg");


#########################
####### add IN WG #######
#########################
for (i=1:num_in_wg){
    addrect;
    set('name','input wg '+num2str(i));
    set('x min',-size_x);
    set('x max',-opt_size_x/2);
    # This term should be determined manually according to different functionalities of devices
    # set('y',opt_size_y/2-0.5*(1/num_in_wg)*opt_size_y-(1/num_in_wg)*(i-1)*opt_size_y);
    set('y',opt_size_y/2-0.5*in_wg_width-(1/(num_in_wg-1))*(i-1)*(opt_size_y-in_wg_width));
    set('y span',in_wg_width);
    set('z',0);
    set('z span',wg_thickness);
    set('material',"n_wg");
}


#########################
###### add OUT WG #######
#########################
for (i=1:num_out_wg){
    addrect;
    set('name','output wg'+num2str(i));
    set('x min',opt_size_x/2);
    set('x max',size_x);
    set('y',0.5*opt_size_y-0.5*out_wg_width);
    set('y span',out_wg_width);
    set('z',0);
    set('z span',wg_thickness);
    set('material',"n_wg");
}


#########################
###### add Source #######
#########################
for(i=1:mode_num) {
    addmode;
    set("name","Source_TE_mode"+num2str(i)+"_1550");
    set('direction','Forward');
    set('injection axis','x-axis');
    # set('y',opt_size_y/2-0.5*(1/num_in_wg)*opt_size_y-(1/num_in_wg)*(i-1)*opt_size_y);
    set('y',opt_size_y/2-0.5*in_wg_width-(1/(num_in_wg-1))*(i-1)*(opt_size_y-in_wg_width));
    set('y span',in_wg_width+1e-6);
    set('x',-size_x/2+0.2e-6);
    set('z',0);
    set('z span',fdtd_zspan);
    set('center wavelength',lam_c);
    set('wavelength span', wavelength_span);
    set("mode selection", "user select");
    set("selected mode number", in_mode_list(i));
}


#########################
####### add FDTD ########
#########################
addfdtd;
set('dimension','3D');
set('background material',"n_bg");
set('mesh accuracy',3);
set('x min',-size_x/2);
set('x max',size_x/2);
set('y min',-size_y/2);
set('y max',size_y/2);
set('z',0);
set('z span',fdtd_zspan);
set('simulation time',5000e-15);
set('auto shutoff min',1e-5);
set('force symmetric z mesh', 1);
set("z min bc","Symmetric");


#########################
## add adjoint region ###
#########################
addpower;
set('name','opt_fields');
set('monitor type','3D');
set('x',0);
set('x span',opt_size_x);
set('y min',-opt_size_y/2);
set('y max',opt_size_y/2);
set('z',0);
set('z span',wg_thickness);


#########################
######## add FOM ########
#########################
for(i=1:mode_num) {
    addpower;
    set('name',"fom"+num2str(i));
    set('monitor type','2D X-normal');
    set('x', size_x/2-0.2e-6);
    # This term should be determined manually according to different functionalities of devices
    set('y',0.5*opt_size_y-0.5*out_wg_width);
    set('y span',out_wg_width+1e-6);
    set('z',0);
    set('z span',fdtd_zspan);
}


#########################
##### add FOM MESH ######
#########################
for(i=1:num_out_wg){
    addmesh;
    set('name','fom_mesh');
    set('override x mesh',true);
    set('dx',20e-9);
    set('override y mesh',false);
    set('override z mesh',false);
    set('x', size_x/2-0.2e-6);
    set('x span',2*dx);
    # This term should be determined manually according to different functionalities of devices
    set('y',0.5*opt_size_y-0.5*out_wg_width);
    set('y span',out_wg_width+1e-6);
    set('z',0);
    set('z span',1.2e-6);
}


#########################
###### add Index ########
#########################
addindex;
set('monitor type','3D');
set('name','global_index');
set('x min',-size_x/2);
set('x max',size_x/2);
set('y min',-size_y/2);
set('y max',size_y/2);
set('z',0);
set('z span',fdtd_zspan);
